# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"list_vc": "01_pandas_extra.ipynb",
         "col_list_vc": "01_pandas_extra.ipynb",
         "pd.DataFrame.vc": "01_pandas_extra.ipynb",
         "pd.Series.list_vc": "01_pandas_extra.ipynb",
         "pd.DataFrame.list_vc": "01_pandas_extra.ipynb",
         "default_rename_rule": "01_pandas_extra.ipynb",
         "rename_by_rule": "01_pandas_extra.ipynb",
         "pd.DataFrame.rename_by_rule": "01_pandas_extra.ipynb",
         "column_order": "01_pandas_extra.ipynb",
         "pd.DataFrame.column_order": "01_pandas_extra.ipynb",
         "__all__": "02_imports.ipynb",
         "Path.ls": "02_imports.ipynb",
         "Async": "03_async.ipynb",
         "PandasDisplay": "03_df.ipynb",
         "DOM": "04_html.ipynb",
         "image_to_base64": "04_html.ipynb",
         "data_url": "04_html.ipynb",
         "img_dom": "04_html.ipynb",
         "deeper": "04_html.ipynb",
         "list_group": "04_html.ipynb",
         "col_sm": "04_html.ipynb",
         "list_group_kv": "04_html.ipynb",
         "JS": "04_html.ipynb",
         "JS_file": "04_html.ipynb",
         "display_df": "05_inter_widgets.ipynb",
         "search_box": "05_inter_widgets.ipynb",
         "paginate": "05_inter_widgets.ipynb",
         "make_hboxes": "05_inter_widgets.ipynb",
         "SingleButton": "05_inter_widgets.ipynb",
         "Labeler": "05_inter_widgets.ipynb",
         "EditableList": "05_inter_widgets.ipynb",
         "EditableDict": "05_inter_widgets.ipynb",
         "total_width": "05_inter_widgets.ipynb",
         "LivingStep": "05_inter_widgets.ipynb",
         "StepByStep": "05_inter_widgets.ipynb",
         "Flatten": "06_flatten.ipynb",
         "l2norm": "06_spacy.ipynb",
         "normal": "06_spacy.ipynb",
         "distance": "06_spacy.ipynb",
         "make_map": "06_spacy.ipynb",
         "make_span": "06_spacy.ipynb",
         "make_div": "06_spacy.ipynb",
         "doc2div": "06_spacy.ipynb",
         "compare_sentences": "06_spacy.ipynb",
         "highlight": "06_spacy.ipynb",
         "FreeMap": "07_freemap.ipynb",
         "VipaClass": "09_multiprocess.ipynb",
         "SingleFileLiner": "09_multiprocess.ipynb",
         "DataFrameRowling": "09_multiprocess.ipynb",
         "Stuff": "10_loop.ipynb",
         "method4all": "10_loop.ipynb",
         "StorageCore": "10_loop.ipynb",
         "Loop": "10_loop.ipynb",
         "ProgressBar": "10_loop.ipynb",
         "error_tolerate": "10_loop.ipynb",
         "Tolerate": "10_loop.ipynb",
         "LambdaCall": "10_loop.ipynb",
         "Event": "10_loop.ipynb",
         "chunkify": "10_loop.ipynb",
         "NewFileScanner": "11_etl.ipynb",
         "get_static": "30_traceable_edit_in_flask.ipynb",
         "open_static": "12_static_file.ipynb",
         "create_event": "15_loopstack.ipynb",
         "events": "15_loopstack.ipynb",
         "LoopStack": "15_loopstack.ipynb",
         "MetricTab": "15_loopstack.ipynb",
         "train_callbacks": "15_loopstack.ipynb",
         "eval_callbacks": "15_loopstack.ipynb",
         "to_tensor": "15_loopstack.ipynb",
         "simple_forward": "15_loopstack.ipynb",
         "single_device": "15_loopstack.ipynb",
         "TrainLoop": "15_loopstack.ipynb",
         "EvalLoop": "15_loopstack.ipynb",
         "find_stuff": "15_loopstack.ipynb",
         "share_stuff": "15_loopstack.ipynb",
         "Config": "20_config.ipynb",
         "first": "20_config.ipynb",
         "getall": "20_config.ipynb",
         "now": "21_minimum.ipynb",
         "Link": "21_minimum.ipynb",
         "edit_js": "30_traceable_edit_in_flask.ipynb",
         "DefaultTemp": "30_traceable_edit_in_flask.ipynb",
         "Editable": "30_traceable_edit_in_flask.ipynb",
         "pct_to_float": "31_df_filter.ipynb",
         "ensure_pct": "31_df_filter.ipynb",
         "detect_number_column": "31_df_filter.ipynb",
         "DataFilter": "31_df_filter.ipynb",
         "LayerTorch": "31_df_filter.ipynb",
         "RecursiveFilterCore": "31_df_filter.ipynb",
         "RecursiveFilter": "31_df_filter.ipynb",
         "get_files": "33_files.ipynb",
         "file_detail": "33_files.ipynb",
         "cache": "40_wild_tree_and_loss.ipynb",
         "WildNode": "40_wild_tree_and_loss.ipynb",
         "WildEdge": "40_wild_tree_and_loss.ipynb",
         "WildTree": "40_wild_tree_and_loss.ipynb",
         "calc_weight": "40_wild_tree_and_loss.ipynb",
         "loss_package": "40_wild_tree_and_loss.ipynb",
         "image_dom": "51_image_widgets.ipynb",
         "with_title_dom": "51_image_widgets.ipynb",
         "view_images": "51_image_widgets.ipynb",
         "Subplots": "51_image_widgets.ipynb",
         "C2I": "53_category.ipynb",
         "Category": "53_category.ipynb",
         "TreeCategory": "53_category.ipynb",
         "CosineSearch": "55_cosine_search.ipynb",
         "CosineSearchWithCategory": "55_cosine_search.ipynb",
         "unfreeze": "61_thunder_callbacks.ipynb",
         "freeze": "61_thunder_callbacks.ipynb",
         "DataFrameMetricsCallback": "61_thunder_callbacks.ipynb",
         "UnfreezeScheduler": "61_thunder_callbacks.ipynb",
         "nn.Module.unfreeze": "61_thunder_callbacks.ipynb",
         "nn.Module.freeze": "61_thunder_callbacks.ipynb",
         "convert_iob2_file_to_iobes": "70_hf_transformer_data.ipynb",
         "conbine_iobes_file": "70_hf_transformer_data.ipynb",
         "IOBES": "70_hf_transformer_data.ipynb",
         "ner_model_from": "72_pl_training.ipynb",
         "ner_tokenizer_from": "72_pl_training.ipynb",
         "NERDataModule": "72_pl_training.ipynb",
         "NERModule": "72_pl_training.ipynb",
         "clean_ner_output": "72_pl_training.ipynb",
         "NERInference": "72_pl_training.ipynb",
         "CudaDevice": "CUDA_GPU_Management.ipynb",
         "CudaHandler": "CUDA_GPU_Management.ipynb",
         "MLMVisualizer": "bert_visualize.ipynb",
         "li": "bert_visualize.ipynb",
         "infer_logits": "bert_visualize.ipynb",
         "predict_text": "bert_visualize.ipynb",
         "visualize": "bert_visualize.ipynb",
         "visualize_result": "bert_visualize.ipynb",
         "softmax": "bert_visualize.ipynb",
         "MLMVisualizer.infer_logits": "bert_visualize.ipynb",
         "MLMVisualizer.predict_text": "bert_visualize.ipynb",
         "MLMVisualizer.visualize": "bert_visualize.ipynb",
         "MLMVisualizer.visualize_result": "bert_visualize.ipynb",
         "split_df": "bilstm-based-search-on-netflix-data.ipynb",
         "Vocab": "bilstm-based-search-on-netflix-data.ipynb",
         "seqData": "bilstm-based-search-on-netflix-data.ipynb",
         "arrData": "bilstm-based-search-on-netflix-data.ipynb",
         "fuse": "bilstm-based-search-on-netflix-data.ipynb",
         "MultiTaskCELoss": "cross_entropy_weighter.ipynb",
         "Node": "dataframe_pipeline.ipynb",
         "chunkNode": "dataframe_pipeline.ipynb",
         "frameEdge": "dataframe_pipeline.ipynb",
         "colEdge": "dataframe_pipeline.ipynb",
         "donothing": "dataframe_pipeline.ipynb",
         "nothing": "dataframe_pipeline.ipynb",
         "fillNaEdge": "dataframe_pipeline.ipynb",
         "engTokEdge": "dataframe_pipeline.ipynb",
         "CNTok": "dataframe_pipeline.ipynb",
         "capMinMaxEdge": "dataframe_pipeline.ipynb",
         "trackVocabEdge": "dataframe_pipeline.ipynb",
         "saveCSV": "dataframe_pipeline.ipynb",
         "saveSQL": "dataframe_pipeline.ipynb",
         "eng_twt_tk": "dataframe_pipeline.ipynb",
         "Opts": "optimizers.ipynb"}

modules = ["pdenhanced.py",
           "imports.py",
           "asyncing.py",
           "df.py",
           "html.py",
           "widgets.py",
           "flatten.py",
           "spacy.py",
           "freemap.py",
           "multiproc.py",
           "loop.py",
           "etl.py",
           "static_file.py",
           "loopstack.py",
           "config.py",
           "minimum.py",
           "editable.py",
           "df_filter.py",
           "files.py",
           "wildtree.py",
           "images/widgets.py",
           "category.py",
           "cosine.py",
           "thunder/callbacks.py",
           "hf/data.py",
           "hf/train.py",
           "ftorch/cuda.py",
           "bert_visualize.py",
           "data/nlp.py",
           "multitask_ce.py",
           "pipe.py",
           "ftorch/optimizer.py"]

doc_url = "https://raynardj.github.io/forgebox/"

git_url = "https://github.com/raynardj/forgebox/tree/master/"

def custom_doc_links(name): return None
