# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/11_train.ipynb (unless otherwise specified).

__all__ = ['DataLoop', 'BeforeForward', 'EvalForward', 'Forward', 'CalcLoss', 'Backward', 'OptStep']

# Cell
from .loop import Loop,Event,method4all,StorageCore,ProgressBar,Tolerate
import torch

class DataLoop(Loop):
    def __init__(self,dataloader=None):
        super().__init__(iterable=dataloader)

class BeforeForward(Event):
    def __init__(self,iterable=[]):
        super().__init__(iterable=iterable,event_name = "before_forward")

class EvalForward(Event):
    def __init__(self,iterable=[]):
        super().__init__(iterable=iterable,event_name = "forward")

    def callon(self):
        self()
        with torch.no_grad():
            self.iter_cb()

class Forward(Event):
    def __init__(self,iterable=[]):
        super().__init__(iterable=iterable,event_name = "forward")

class CalcLoss(Event):
    def __init__(self,iterable=[]):
        super().__init__(iterable=iterable,event_name = "calc_loss")

class Backward(Event):
    def __init__(self,iterable=[]):
        super().__init__(iterable=iterable,event_name = "backward")

class OptStep(Event):
    def __init__(self,iterable=[]):
        super().__init__(iterable=iterable,event_name = "opt_step")